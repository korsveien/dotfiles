vim.cmd [[

call plug#begin(stdpath('data') . '/plugged')
    " Utility libraries
    Plug 'https://github.com/nvim-lua/popup.nvim'
    Plug 'https://github.com/nvim-lua/plenary.nvim'

    " Editing
    Plug 'https://github.com/terryma/vim-multiple-cursors'

    " File explorer
    Plug 'https://github.com/kyazdani42/nvim-tree.lua', { 'on' : 'NvimTreeToggle'}
    Plug 'https://github.com/kyazdani42/nvim-web-devicons'
    Plug 'https://github.com/ruanyl/vim-gh-line'
    Plug 'https://github.com/chrishrb/gx.nvim'

    " Tim Pope essentials
    Plug 'https://github.com/tpope/vim-fugitive'
    Plug 'https://github.com/tpope/vim-rhubarb'
    Plug 'https://github.com/tpope/vim-unimpaired'
    Plug 'https://github.com/tpope/vim-surround'

    " Junegunn essentiasls
    Plug 'https://github.com/junegunn/fzf'

    " Telescope
    Plug 'https://github.com/nvim-telescope/telescope.nvim'
    Plug 'https://github.com/nvim-telescope/telescope-symbols.nvim'

    " Treesitter
    Plug 'https://github.com/nvim-treesitter/nvim-treesitter'
    Plug 'https://github.com/nvim-treesitter/nvim-treesitter-context', {'do': ':TSUpdate'}
    Plug 'https://github.com/Afourcat/treesitter-terraform-doc.nvim'

    " Language support
    Plug 'https://github.com/google/vim-jsonnet'
    Plug 'https://github.com/hashivim/vim-terraform'
    Plug 'https://github.com/rust-lang/rust.vim'
    Plug 'https://github.com/khaveesh/vim-fish-syntax'

    " LSP, Autocompletion and snippets
    Plug 'https://github.com/neovim/nvim-lspconfig'
    Plug 'https://github.com/hrsh7th/nvim-cmp/'
    Plug 'https://github.com/hrsh7th/cmp-nvim-lsp'
    Plug 'https://github.com/hrsh7th/cmp-path'
    Plug 'https://github.com/hrsh7th/cmp-cmdline'
    Plug 'https://github.com/hrsh7th/cmp-buffer'
    Plug 'https://github.com/onsails/lspkind.nvim'
    Plug 'https://github.com/williamboman/mason.nvim'
    Plug 'https://github.com/williamboman/mason-lspconfig.nvim'
    Plug 'https://github.com/folke/trouble.nvim'
    Plug 'https://github.com/stevearc/aerial.nvim'
    Plug 'https://github.com/windwp/nvim-autopairs'
    Plug 'https://github.com/ray-x/lsp_signature.nvim'

    " Colors and GUI
    Plug 'https://github.com/chentoast/marks.nvim'
    Plug 'https://github.com/korsveien/gruvbox-material'
    Plug 'https://github.com/wfxr/minimap.vim', {'do': ':!cargo install --locked code-minimap'}
    Plug 'https://github.com/lewis6991/gitsigns.nvim'

call plug#end()
]]
"------------------
"   MAPPINGS
"------------------

-- https://www.mukeshsharma.dev/2022/02/08/neovim-workflow-for-terraform.html
-- autoformat terraform files
vim.cmd([[silent! autocmd! filetypedetect BufRead,BufNewFile *.tf]])
vim.cmd([[autocmd BufRead,BufNewFile *.hcl set filetype=hcl]])
vim.cmd([[autocmd BufRead,BufNewFile .terraformrc,terraform.rc set filetype=hcl]])
vim.cmd([[autocmd BufRead,BufNewFile *.tf,*.tfvars set filetype=terraform]])
vim.cmd([[autocmd BufRead,BufNewFile *.tfstate,*.tfstate.backup set filetype=json]])

-- automatically format *.tf and *.tfvars files with terraform fmt on save and align settings.
vim.cmd([[let g:terraform_fmt_on_save=1]])
vim.cmd([[let g:terraform_align=1]])

--

require'config/colors'
require'config/gitsigns'
require'config/marks'
require'config/nvimtree'
require'config/options'
require'config/statusline'
require'config/telescope'
require'config/autocmds'
require'config/keymaps'

require'config/treesitter'

require'config/cmp'
require'config/lsp'
require("nvim-autopairs").setup {}

-- mason
require("mason").setup{}
require("mason-lspconfig").setup {
    ensure_installed = {
        "bashls",
        "gopls",
        "jsonls",
        "lua_ls",
        "rust_analyzer",
        "terraformls",
        "tflint",
        "ts_ls",
        "yamlls",
    }
}

require("aerial").setup{}

require "lsp_signature".setup{}

require("gx").setup{
    keys = { { "gx", "<cmd>Browse<cr>", mode = { "n", "x" } } },
}
